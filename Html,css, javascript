<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic E-commerce Product Table</title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            color: #333;
            padding: 20px;
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        .container {
            max-width: 1200px;
            margin: auto;
        }

        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 20px;
        }

        .controls input[type="search"],
        .controls select,
        .controls input[type="range"] {
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
        }

        .controls .price-range {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .table-container {
            overflow-x: auto;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            text-align: left;
        }

        th,
        td {
            padding: 15px;
            border-bottom: 1px solid #eee;
        }

        th {
            background-color: #f4f4f4;
        }

        th.sortable {
            cursor: pointer;
        }

        th.sortable:hover {
            background-color: #e0e0e0;
        }

        tr:nth-child(even) {
            background-color: #fafafa;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        .product-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 5px;
        }

        @media (max-width: 768px) {
            .controls {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Dynamic E-commerce Product Table</h1>
        <!-- Filters and Search -->
        <div class="controls">
            <input type="search" id="search" placeholder="Search by product name">
            <select id="category-filter">
                <option value="">All Categories</option>
                <option value="Electronics">Electronics</option>
                <option value="Apparel">Apparel</option>
                <option value="Home Appliances">Home Appliances</option>
            </select>
            <div class="price-range">
                <label for="price-range">Price: </label>
                <input type="range" id="price-range" min="0" max="1000" step="10" value="1000">
                <span id="price-value">$1000</span>
            </div>
            <select id="sort-options">
                <option value="">Sort By</option>
                <option value="price-asc">Price: Low to High</option>
                <option value="price-desc">Price: High to Low</option>
                <option value="rating-desc">Rating: High to Low</option>
                <option value="rating-asc">Rating: Low to High</option>
            </select>
        </div>

        <!-- Table -->
        <div class="table-container">
            <table id="product-table">
                <thead>
                    <tr>
                        <th>Product Image</th>
                        <th>Product Name</th>
                        <th class="sortable">Price</th>
                        <th class="sortable">Rating</th>
                        <th>Category</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Dynamic rows will be generated here -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        const products = [
            { id: 1, image: "https://via.placeholder.com/50", name: "Smartphone", price: 699, rating: 4.5, category: "Electronics" },
            { id: 2, image: "https://via.placeholder.com/50", name: "Laptop", price: 1200, rating: 4.8, category: "Electronics" },
            { id: 3, image: "https://via.placeholder.com/50", name: "T-shirt", price: 20, rating: 4.1, category: "Apparel" },
            { id: 4, image: "https://via.placeholder.com/50", name: "Washing Machine", price: 450, rating: 4.3, category: "Home Appliances" },
            { id: 5, image: "https://via.placeholder.com/50", name: "Headphones", price: 150, rating: 4.7, category: "Electronics" },
            // Add more products...
        ];

        const tableBody = document.querySelector("#product-table tbody");
        const searchInput = document.querySelector("#search");
        const categoryFilter = document.querySelector("#category-filter");
        const priceRange = document.querySelector("#price-range");
        const priceValue = document.querySelector("#price-value");
        const sortOptions = document.querySelector("#sort-options");

        const renderTable = (filteredProducts) => {
            tableBody.innerHTML = "";
            filteredProducts.forEach(product => {
                const row = `
                    <tr>
                        <td><img src="${product.image}" alt="${product.name}" class="product-image"></td>
                        <td>${product.name}</td>
                        <td>$${product.price.toFixed(2)}</td>
                        <td>${product.rating}</td>
                        <td>${product.category}</td>
                    </tr>
                `;
                tableBody.innerHTML += row;
            });
        };

        const filterAndSortProducts = () => {
            let filteredProducts = [...products];

            const searchTerm = searchInput.value.toLowerCase();
            const selectedCategory = categoryFilter.value;
            const maxPrice = parseFloat(priceRange.value);
            const sortOption = sortOptions.value;

            if (searchTerm) {
                filteredProducts = filteredProducts.filter(product => product.name.toLowerCase().includes(searchTerm));
            }

            if (selectedCategory) {
                filteredProducts = filteredProducts.filter(product => product.category === selectedCategory);
            }

            filteredProducts = filteredProducts.filter(product => product.price <= maxPrice);

            if (sortOption) {
                const [key, order] = sortOption.split("-");
                filteredProducts.sort((a, b) => order === "asc" ? a[key] - b[key] : b[key] - a[key]);
            }

            renderTable(filteredProducts);
        };

        searchInput.addEventListener("input", filterAndSortProducts);
        categoryFilter.addEventListener("change", filterAndSortProducts);
        priceRange.addEventListener("input", () => {
            priceValue.textContent = `$${priceRange.value}`;
            filterAndSortProducts();
        });
        sortOptions.addEventListener("change", filterAndSortProducts);

        renderTable(products); // Initial render
    </script>
</body>
</html>
